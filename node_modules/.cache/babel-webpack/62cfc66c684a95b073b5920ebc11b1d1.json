{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./shopping-list.service\";\nimport * as i2 from \"../logging.service\";\nimport * as i3 from \"@ngrx/store\";\nimport * as i4 from \"./shopping-edit/shopping-edit.component\";\nimport * as i5 from \"@angular/common\";\n\nfunction ShoppingListComponent_a_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"a\", 4);\n    i0.ɵɵlistener(\"click\", function ShoppingListComponent_a_5_Template_a_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.onEditItem(i_r2);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ingredient_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", ingredient_r1.name, \" (\", ingredient_r1.amount, \") \");\n  }\n}\n\nexport class ShoppingListComponent {\n  constructor(slService, loggingService, store) {\n    this.slService = slService;\n    this.loggingService = loggingService;\n    this.store = store;\n  }\n\n  ngOnInit() {\n    this.ingredients = this.store.select('shoppingList'); //non devo più gestire la subscribe nel servizio\n    // this.ingredients = this.slService.getIngredients();\n    // this.igChangeSub = this.slService.ingredientsChanged.subscribe(\n    //   (ingredients: Ingredient[]) => {\n    //     this.ingredients = ingredients;\n    //   }\n    // ); //subscribe sia per eventEmitter che per Subject\n\n    this.loggingService.printLog('Hello from the ShoppingListComponent ngOnInit!');\n  }\n\n  onEditItem(index) {\n    this.slService.startedEditing.next(index);\n  }\n\n  ngOnDestroy() {\n    //annullo la subscription\n    this.igChangeSub.unsubscribe();\n  }\n\n}\n\nShoppingListComponent.ɵfac = function ShoppingListComponent_Factory(t) {\n  return new (t || ShoppingListComponent)(i0.ɵɵdirectiveInject(i1.ShoppingListService), i0.ɵɵdirectiveInject(i2.LoggingService), i0.ɵɵdirectiveInject(i3.Store));\n};\n\nShoppingListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ShoppingListComponent,\n  selectors: [[\"app-shopping-list\"]],\n  decls: 7,\n  vars: 3,\n  consts: [[1, \"row\"], [1, \"col\", \"xs-10\"], [1, \"list-group\"], [\"class\", \"list-group-item\", \"style\", \"cursor: pointer\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-group-item\", 2, \"cursor\", \"pointer\", 3, \"click\"]],\n  template: function ShoppingListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelement(2, \"app-shopping-edit\");\n      i0.ɵɵelement(3, \"hr\");\n      i0.ɵɵelementStart(4, \"ul\", 2);\n      i0.ɵɵtemplate(5, ShoppingListComponent_a_5_Template, 2, 2, \"a\", 3);\n      i0.ɵɵpipe(6, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(6, 1, ctx.ingredients).ingredients);\n    }\n  },\n  directives: [i4.ShoppingEditComponent, i5.NgForOf],\n  pipes: [i5.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzaG9wcGluZy1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"]\n});","map":{"version":3,"sources":["C:\\Users\\matilde.mantoan\\Desktop\\Angular\\Udemy\\first-app\\src\\app\\shopping-list\\shopping-list.component.ts","C:\\Users\\matilde.mantoan\\Desktop\\Angular\\Udemy\\first-app\\src\\app\\shopping-list\\shopping-list.component.html"],"names":[],"mappings":"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","sourcesContent":["/*\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Ingredient } from '../shared/ingredient.model'; //importo il modello\nimport { ShoppingListService } from './shopping-list.service';\n\n@Component({\n  selector: 'app-shopping-list',\n  templateUrl: './shopping-list.component.html',\n  styleUrls: ['./shopping-list.component.css'],\n})\nexport class ShoppingListComponent implements OnInit, OnDestroy {\n  ingredients: Ingredient[];\n  //archivio la subscription in una proprietà (observables)\n  private igChangeSub: Subscription;\n\n  constructor(private slService: ShoppingListService) {}\n\n  ngOnInit(): void {\n    this.ingredients = this.slService.getIngredients();\n    this.igChangeSub = this.slService.ingredientsChanged.subscribe(\n      (ingredients: Ingredient[]) => {\n        this.ingredients = ingredients;\n      }\n    ); //subscribe sia per eventEmitter che per Subject\n  }\n\n  //onIngredientAdded(ingredient: Ingredient) {\n  //  this.ingredients.push(ingredient); //aggiungo all'array\n  //}\n\n  ngOnDestroy(): void {\n    //annullo la subscription\n    this.igChangeSub.unsubscribe();\n  }\n}*/\n\n//con form\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable, Subscription } from 'rxjs';\nimport { LoggingService } from '../logging.service';\nimport { Ingredient } from '../shared/ingredient.model'; //importo il modello\nimport { ShoppingListService } from './shopping-list.service';\nimport * as fromSLReducer from './store/shopping-list.reducer';\n\n@Component({\n  selector: 'app-shopping-list',\n  templateUrl: './shopping-list.component.html',\n  styleUrls: ['./shopping-list.component.css'],\n})\nexport class ShoppingListComponent implements OnInit, OnDestroy {\n  //ingredients: Ingredient[];\n  ingredients: Observable<{ ingredients: Ingredient[] }>;\n  //archivio la subscription in una proprietà (observables)\n  private igChangeSub: Subscription;\n\n  constructor(\n    private slService: ShoppingListService,\n    private loggingService: LoggingService,\n    private store: Store<fromSLReducer.AppState>\n  ) {}\n\n  ngOnInit(): void {\n    this.ingredients = this.store.select('shoppingList');\n    //non devo più gestire la subscribe nel servizio\n    // this.ingredients = this.slService.getIngredients();\n    // this.igChangeSub = this.slService.ingredientsChanged.subscribe(\n    //   (ingredients: Ingredient[]) => {\n    //     this.ingredients = ingredients;\n    //   }\n    // ); //subscribe sia per eventEmitter che per Subject\n    this.loggingService.printLog(\n      'Hello from the ShoppingListComponent ngOnInit!'\n    );\n  }\n\n  onEditItem(index: number) {\n    this.slService.startedEditing.next(index);\n  }\n\n  ngOnDestroy(): void {\n    //annullo la subscription\n    this.igChangeSub.unsubscribe();\n  }\n}\n","<!--senza service\n  <div class=\"row\">\n  <div class=\"col xs-10\">\n    <app-shopping-edit\n      (ingredientAdded)=\"onIngredientAdded($event)\"\n    ></app-shopping-edit>\n    <hr />\n    <ul class=\"list-group\">\n      <a\n        href=\"#\"\n        class=\"list-group-item\"\n        style=\"cursor: pointer\"\n        *ngFor=\"let ingredient of ingredients\"\n      >        {{ ingredient.name }} ({{ ingredient.amount }})\n      </a>\n    </ul>\n  </div>\n</div>\n-->\n\n<!--con service\n<div class=\"row\">\n  <div class=\"col xs-10\">\n    <app-shopping-edit></app-shopping-edit>\n    <hr />\n    <ul class=\"list-group\">\n      <a\n        href=\"#\"\n        class=\"list-group-item\"\n        style=\"cursor: pointer\"\n        *ngFor=\"let ingredient of ingredients\"\n      >\n        {{ ingredient.name }} ({{ ingredient.amount }})\n      </a>\n    </ul>\n  </div>\n</div>\n-->\n\n<!-- con form -->\n<div class=\"row\">\n  <div class=\"col xs-10\">\n    <app-shopping-edit></app-shopping-edit>\n    <hr />\n    <ul class=\"list-group\">\n      <a\n        class=\"list-group-item\"\n        style=\"cursor: pointer\"\n        *ngFor=\"\n          let ingredient of (ingredients | async).ingredients;\n          let i = index\n        \"\n        (click)=\"onEditItem(i)\"\n      >\n        {{ ingredient.name }} ({{ ingredient.amount }})\n      </a>\n    </ul>\n  </div>\n</div>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}