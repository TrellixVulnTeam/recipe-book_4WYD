{"ast":null,"code":"import { Ingredient } from 'src/app/shared/ingredient.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shopping-list.service\";\nimport * as i2 from \"@angular/forms\";\nconst _c0 = [\"f\"];\nexport let ShoppingEditComponent = /*#__PURE__*/(() => {\n  class ShoppingEditComponent {\n    constructor(slService) {\n      this.slService = slService;\n      this.editMode = false;\n    }\n\n    ngOnInit() {\n      this.subscription = this.slService.startedEditing.subscribe(index => {\n        this.editMode = true;\n        this.editedItemIndex = index;\n        this.editedItem = this.slService.getIngredient(index);\n        this.slForm.setValue({\n          name: this.editedItem.name,\n          amount: this.editedItem.amount\n        });\n      });\n    }\n\n    onSubmitItem(form) {\n      //emetto un evento in cui passo i dati al parent component (shopping list)\n      const value = form.value;\n      const newIngredient = new Ingredient(value.name, value.amount); //se editMode = true uso updateIngredient, se false uso addIngredient\n\n      if (this.editMode) {\n        this.slService.updateIngredient(this.editedItemIndex, newIngredient);\n      } else {\n        this.slService.addIngredient(newIngredient);\n      }\n\n      this.editMode = false; //una volta aggiunto/modificato un ingrediente torna su false\n\n      form.reset(); //pulisce i campi input\n    }\n\n    onClear() {\n      this.slForm.reset();\n      this.editMode = false;\n    }\n\n    onDelete() {\n      this.onClear();\n      this.slService.deleteIngredient(this.editedItemIndex);\n    }\n\n    ngOnDestroy() {\n      this.subscription.unsubscribe(); //clean\n    }\n\n  }\n\n  ShoppingEditComponent.ɵfac = function ShoppingEditComponent_Factory(t) {\n    return new (t || ShoppingEditComponent)(i0.ɵɵdirectiveInject(i1.ShoppingListService));\n  };\n\n  ShoppingEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ShoppingEditComponent,\n    selectors: [[\"app-shopping-edit\"]],\n    viewQuery: function ShoppingEditComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.slForm = _t.first);\n      }\n    },\n    decls: 21,\n    vars: 3,\n    consts: [[1, \"row\"], [1, \"col-xs-12\"], [3, \"ngSubmit\"], [\"f\", \"ngForm\"], [1, \"col-xs-5\", \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"ngModel\", \"\", \"required\", \"\", 1, \"form-control\"], [1, \"col-sm-2\", \"form-group\"], [\"for\", \"amount\"], [\"type\", \"number\", \"id\", \"amount\", \"name\", \"amount\", \"ngModel\", \"\", \"required\", \"\", 1, \"form-control\", 3, \"pattern\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n    template: function ShoppingEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"form\", 2, 3);\n        i0.ɵɵlistener(\"ngSubmit\", function ShoppingEditComponent_Template_form_ngSubmit_2_listener() {\n          i0.ɵɵrestoreView(_r1);\n\n          const _r0 = i0.ɵɵreference(3);\n\n          return ctx.onSubmitItem(_r0);\n        });\n        i0.ɵɵelementStart(4, \"div\", 0);\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵelementStart(6, \"label\", 5);\n        i0.ɵɵtext(7, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 7);\n        i0.ɵɵelementStart(10, \"label\", 8);\n        i0.ɵɵtext(11, \"Amount\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 0);\n        i0.ɵɵelementStart(14, \"div\", 1);\n        i0.ɵɵelementStart(15, \"button\", 10);\n        i0.ɵɵtext(16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function ShoppingEditComponent_Template_button_click_17_listener() {\n          return ctx.onDelete();\n        });\n        i0.ɵɵtext(18, \" Delete \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function ShoppingEditComponent_Template_button_click_19_listener() {\n          return ctx.onClear();\n        });\n        i0.ɵɵtext(20, \" Clear \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(3);\n\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"pattern\", \"[1-9]+[0-9]*$\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", !_r0.valid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.editMode ? \"Update\" : \"Add\", \" \");\n      }\n    },\n    directives: [i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.NgForm, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel, i2.RequiredValidator, i2.NumberValueAccessor, i2.PatternValidator],\n    styles: [\"\"]\n  });\n  return ShoppingEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}